{"ast":null,"code":"var _jsxFileName = \"/home/vladichka/tzReactEmailConfirm/src/Registration/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { css } from \"@emotion/css\";\nimport * as classes from \"./style.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  const [passwordValidity, setPasswordValidity] = useState(true);\n  const [emailValidity, setEmailValidity] = useState(true);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const emailInput = emailRef.current.value;\n    const passwordInput = passwordRef.current.value;\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (passwordInput.length < 8) {\n      setPasswordValidity(false);\n    } else {\n      setPasswordValidity(true);\n\n      if (!re.test(String(emailInput).toLowerCase())) {\n        setEmailValidity(false);\n      } else {\n        setEmailValidity(true);\n      }\n    }\n\n    if (emailValidity && passwordValidity) {\n      console.log(\"success\");\n    }\n\n    w;\n  };\n\n  let passwordHintStyle = css`\n    color: ${passwordValidity ? \"rgba(37, 67, 83, 0.75)\" : \"#d54e4e;\"};\n  `;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.FormContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: \"@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600;700;800&display=swap');\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.Label,\n          for: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: emailRef,\n        className: classes.InputField,\n        type: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.Label,\n          for: \"password\",\n          children: [\"Password \", /*#__PURE__*/_jsxDEV(\"text\", {\n            className: passwordHintStyle,\n            children: \"(min 8 symbols)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: passwordRef,\n        className: classes.InputField,\n        type: \"password\",\n        id: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitHandler,\n      className: classes.SubmitButton,\n      children: \"Create account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"1YEFB31iqpCpJ0fgIeduOUd2vy8=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/vladichka/tzReactEmailConfirm/src/Registration/Form/Form.js"],"names":["React","useRef","useState","css","classes","Form","passwordValidity","setPasswordValidity","emailValidity","setEmailValidity","emailRef","passwordRef","submitHandler","event","preventDefault","emailInput","current","value","passwordInput","re","length","test","String","toLowerCase","console","log","w","passwordHintStyle","FormContainer","marginBottom","Label","InputField","SubmitButton"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { css } from \"@emotion/css\";\nimport * as classes from \"./style.js\";\n\nexport default function Form() {\n  const [passwordValidity, setPasswordValidity] = useState(true);\n  const [emailValidity, setEmailValidity] = useState(true);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const emailInput = emailRef.current.value;\n    const passwordInput = passwordRef.current.value;\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (passwordInput.length < 8) {\n      setPasswordValidity(false);\n    } else {\n      setPasswordValidity(true);\n      if (!re.test(String(emailInput).toLowerCase())) {\n        setEmailValidity(false);\n      } else {\n        setEmailValidity(true);\n      }\n    }\n    if (emailValidity && passwordValidity) {\n      console.log(\"success\");\n    }w\n  };\n  let passwordHintStyle = css`\n    color: ${passwordValidity ? \"rgba(37, 67, 83, 0.75)\" : \"#d54e4e;\"};\n  `;\n  return (\n    <form className={classes.FormContainer}>\n      <style>\n        @import\n        url('https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600;700;800&display=swap');\n      </style>\n\n      <div style={{ marginBottom: \"30px\" }}>\n        <div>\n          <label className={classes.Label} for=\"email\">\n            Email\n          </label>\n        </div>\n        <input\n          ref={emailRef}\n          className={classes.InputField}\n          type=\"email\"\n          id=\"email\"\n        />\n      </div>\n      <div style={{ marginBottom: \"30px\" }}>\n        <div>\n          <label className={classes.Label} for=\"password\">\n            Password <text className={passwordHintStyle}>(min 8 symbols)</text>\n          </label>\n        </div>\n        <input\n          ref={passwordRef}\n          className={classes.InputField}\n          type=\"password\"\n          id=\"password\"\n        />\n      </div>\n      <button onClick={submitHandler} className={classes.SubmitButton}>\n        Create account\n      </button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}