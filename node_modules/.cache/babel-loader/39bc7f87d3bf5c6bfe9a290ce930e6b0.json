{"ast":null,"code":"var _jsxFileName = \"/home/vladichka/tzReactEmailConfirm/src/Registration/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { css } from \"@emotion/css\";\nimport * as classes from \"./style.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  const [passwordValidity, setPasswordValidity] = useState(false);\n  const [emailValidity, setEmailValidity] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const changeEmailHandler = event => {\n    setEmail(event.target.value);\n\n    if (event.target.value < 8) {\n      setEmailValidity(false);\n    } else {\n      setEmailValidity(true);\n    }\n  };\n\n  const changePasswordHandler = event => {\n    setPassword(event.target.value);\n\n    if (!re.test(String(emailInput).toLowerCase())) {\n      setEmailValidity(false);\n    } else {\n      setEmailValidity(true);\n    }\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!re.test(String(emailInput).toLowerCase())) {\n      setEmailValidity(false);\n    } else {\n      setEmailValidity(true);\n    }\n\n    if (emailValidity && passwordValidity) {\n      console.log(\"success\");\n    } else {\n      console.log(\"bad\");\n    }\n  };\n\n  let passwordHintStyle = css`\n    color: ${passwordValidity ? \"rgba(37, 67, 83, 0.75)\" : \"#d54e4e;\"};\n  `;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.FormContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: \"@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600;700;800&display=swap');\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.Label,\n          for: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: changeEmailHandler,\n        className: classes.InputField,\n        type: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.Label,\n          for: \"password\",\n          children: [\"Password \", /*#__PURE__*/_jsxDEV(\"text\", {\n            className: passwordHintStyle,\n            children: \"(min 8 symbols)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: changePasswordHandler,\n        ref: passwordRef,\n        className: classes.InputField,\n        type: \"password\",\n        id: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitHandler,\n      className: classes.SubmitButton,\n      children: \"Create account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"SU4zUj6urkyv2Rfb77XTVjDTqCA=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/vladichka/tzReactEmailConfirm/src/Registration/Form/Form.js"],"names":["React","useRef","useState","css","classes","Form","passwordValidity","setPasswordValidity","emailValidity","setEmailValidity","email","setEmail","password","setPassword","changeEmailHandler","event","target","value","changePasswordHandler","re","test","String","emailInput","toLowerCase","submitHandler","preventDefault","console","log","passwordHintStyle","FormContainer","marginBottom","Label","InputField","passwordRef","SubmitButton"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { css } from \"@emotion/css\";\nimport * as classes from \"./style.js\";\n\nexport default function Form() {\n  const [passwordValidity, setPasswordValidity] = useState(false);\n  const [emailValidity, setEmailValidity] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const changeEmailHandler = (event) => {\n    setEmail(event.target.value);\n    if (event.target.value < 8) {\n      setEmailValidity(false);\n    } else {\n      setEmailValidity(true);\n    }\n  };\n  const changePasswordHandler = (event) => {\n    setPassword(event.target.value);\n    if (!re.test(String(emailInput).toLowerCase())) {\n      setEmailValidity(false);\n    } else {\n      setEmailValidity(true);\n    }\n  };\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!re.test(String(emailInput).toLowerCase())) {\n      setEmailValidity(false);\n    } else {\n      setEmailValidity(true);\n    }\n    if (emailValidity && passwordValidity) {\n      console.log(\"success\");\n    } else {\n      console.log(\"bad\");\n    }\n  };\n  let passwordHintStyle = css`\n    color: ${passwordValidity ? \"rgba(37, 67, 83, 0.75)\" : \"#d54e4e;\"};\n  `;\n  return (\n    <form className={classes.FormContainer}>\n      <style>\n        @import\n        url('https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600;700;800&display=swap');\n      </style>\n\n      <div style={{ marginBottom: \"30px\" }}>\n        <div>\n          <label className={classes.Label} for=\"email\">\n            Email\n          </label>\n        </div>\n        <input\n          value={email}\n          onChange={changeEmailHandler}\n          className={classes.InputField}\n          type=\"email\"\n          id=\"email\"\n        />\n      </div>\n      <div style={{ marginBottom: \"30px\" }}>\n        <div>\n          <label className={classes.Label} for=\"password\">\n            Password <text className={passwordHintStyle}>(min 8 symbols)</text>\n          </label>\n        </div>\n        <input\n          value={password}\n          onChange={changePasswordHandler}\n          ref={passwordRef}\n          className={classes.InputField}\n          type=\"password\"\n          id=\"password\"\n        />\n      </div>\n      <button onClick={submitHandler} className={classes.SubmitButton}>\n        Create account\n      </button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}